{-# OPTIONS --without-K --safe #-}

open import Algebra

module Data.FingerTree
  {c m}
  (‚Ñ≥ : Monoid c m)
  where

open Monoid ‚Ñ≥ renaming (Carrier to ùì°)
open import Data.Product
open import Function
open import Level using (_‚äî_)
open import Data.Nat as ‚Ñï using (‚Ñï; suc; zero)
open import Data.List as List using (List; _‚à∑_; [])
open import Data.FingerTree.Measures ‚Ñ≥
open import MonoidSolver ‚Ñ≥ using (solve-macro)
open import Data.Unit using (‚ä§)
open import Reflection using (TC; Term)
open import Data.FingerTree.Reasoning ‚Ñ≥
open import Data.FingerTree.Structures ‚Ñ≥
open import Data.FingerTree.Cons ‚Ñ≥

open import Relation.Unary
open import Relation.Nullary
open import Relation.Binary hiding (Decidable)
